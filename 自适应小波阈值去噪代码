import numpy as np
import pywt
import matplotlib.pyplot as plt
import matplotlib.font_manager as fm

# 设置中文字体（以 SimHei 为例，可以根据需要替换为其他字体）
plt.rcParams['font.sans-serif'] = ['SimHei']  # 设置字体为黑体
plt.rcParams['axes.unicode_minus'] = False  # 解决负号显示问题

# 读取油井动液面信号数据
ini_file_path = r'D:\shudeng\ProofingTool\数据\215711126520129_OriData_20221102055610(1355).ini'

# 读取文件中的数值数据
with open(ini_file_path, 'r') as file:
    data = np.array([float(line.strip()) for line in file if line.strip()])

# 自适应小波去噪函数
def adaptive_wavelet_denoising(signal, wavelet='db6', level=5):
    # 小波分解
    coeffs = pywt.wavedec(signal, wavelet, level=level)
    # 初始化自适应阈值
    sigma = np.median(np.abs(coeffs[-1])) / 0.6745
    N = len(signal)

    # 自适应阈值函数
    def adaptive_threshold(level, N):
        return sigma * np.sqrt(2 * np.log(N)) / (2**level)

    # 对每个小波分解层进行阈值处理
    for i in range(1, len(coeffs)):
        threshold = adaptive_threshold(i, N)
        coeffs[i] = pywt.threshold(coeffs[i], threshold, mode='soft')

    # 重构去噪信号
    denoised_signal = pywt.waverec(coeffs, wavelet)
    return denoised_signal

# 使用自适应小波去噪方法处理油井动液面信号
denoised_signal = adaptive_wavelet_denoising(data)

# 绘制去噪前后的对比图
plt.figure(figsize=(12, 6))

# 绘制原始油井动液面信号
plt.subplot(2, 1, 1)
plt.plot(data)
plt.title('原始动液面信号')

# 绘制去噪后的油井动液面信号
plt.subplot(2, 1, 2)
plt.plot(denoised_signal)
plt.title('自适应小波阈值去噪后的动液面信号')

plt.tight_layout()
plt.show()
